// <auto-generated />
using System;
using HumanResourceDictionary.Infrastructure.UnitOfWork;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HumanResourceDictionary.Infrastructure.Migrations
{
    [DbContext(typeof(HumanResourceDbContext))]
    partial class HumanResourceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HumanResourceDictionary.Infrastructure.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("Cities", "dictionary");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "TBS"
                        },
                        new
                        {
                            Id = 2,
                            Code = "KUT"
                        },
                        new
                        {
                            Id = 3,
                            Code = "BAT"
                        },
                        new
                        {
                            Id = 4,
                            Code = "RUS"
                        },
                        new
                        {
                            Id = 5,
                            Code = "ZUG"
                        },
                        new
                        {
                            Id = 6,
                            Code = "GOR"
                        },
                        new
                        {
                            Id = 7,
                            Code = "TEL"
                        },
                        new
                        {
                            Id = 8,
                            Code = "POT"
                        },
                        new
                        {
                            Id = 9,
                            Code = "OZA"
                        },
                        new
                        {
                            Id = 10,
                            Code = "SAM"
                        },
                        new
                        {
                            Id = 11,
                            Code = "AKH"
                        },
                        new
                        {
                            Id = 12,
                            Code = "KHA"
                        });
                });

            modelBuilder.Entity("HumanResourceDictionary.Infrastructure.Entities.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("Genders", "dictionary");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "FE"
                        },
                        new
                        {
                            Id = 2,
                            Code = "MA"
                        });
                });

            modelBuilder.Entity("HumanResourceDictionary.Infrastructure.Entities.LocalizedCityName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("LocalizedCityNames", "dictionary");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            LanguageCode = "GE",
                            Name = "თბილისი"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            LanguageCode = "EN",
                            Name = "Tbilisi"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 2,
                            LanguageCode = "GE",
                            Name = "ქუთაისი"
                        },
                        new
                        {
                            Id = 4,
                            CityId = 2,
                            LanguageCode = "EN",
                            Name = "Kutaisi"
                        },
                        new
                        {
                            Id = 5,
                            CityId = 3,
                            LanguageCode = "GE",
                            Name = "ბათუმი"
                        },
                        new
                        {
                            Id = 6,
                            CityId = 3,
                            LanguageCode = "EN",
                            Name = "Batumi"
                        },
                        new
                        {
                            Id = 7,
                            CityId = 4,
                            LanguageCode = "GE",
                            Name = "რუსთავი"
                        },
                        new
                        {
                            Id = 8,
                            CityId = 4,
                            LanguageCode = "EN",
                            Name = "Rustavi"
                        },
                        new
                        {
                            Id = 9,
                            CityId = 5,
                            LanguageCode = "GE",
                            Name = "ზუგდიდი"
                        },
                        new
                        {
                            Id = 10,
                            CityId = 5,
                            LanguageCode = "EN",
                            Name = "Zugdidi"
                        },
                        new
                        {
                            Id = 11,
                            CityId = 6,
                            LanguageCode = "GE",
                            Name = "გორი"
                        },
                        new
                        {
                            Id = 12,
                            CityId = 6,
                            LanguageCode = "EN",
                            Name = "Gori"
                        },
                        new
                        {
                            Id = 13,
                            CityId = 7,
                            LanguageCode = "GE",
                            Name = "თელავი"
                        },
                        new
                        {
                            Id = 14,
                            CityId = 7,
                            LanguageCode = "EN",
                            Name = "Telavi"
                        },
                        new
                        {
                            Id = 15,
                            CityId = 8,
                            LanguageCode = "GE",
                            Name = "ფოთი"
                        },
                        new
                        {
                            Id = 16,
                            CityId = 8,
                            LanguageCode = "EN",
                            Name = "Poti"
                        },
                        new
                        {
                            Id = 17,
                            CityId = 9,
                            LanguageCode = "GE",
                            Name = "ოზურგეთი"
                        },
                        new
                        {
                            Id = 18,
                            CityId = 9,
                            LanguageCode = "EN",
                            Name = "Ozurgeti"
                        },
                        new
                        {
                            Id = 19,
                            CityId = 10,
                            LanguageCode = "GE",
                            Name = "სამტრედია"
                        },
                        new
                        {
                            Id = 20,
                            CityId = 10,
                            LanguageCode = "EN",
                            Name = "Samtredia"
                        },
                        new
                        {
                            Id = 21,
                            CityId = 11,
                            LanguageCode = "GE",
                            Name = "ახალციხე"
                        },
                        new
                        {
                            Id = 22,
                            CityId = 11,
                            LanguageCode = "EN",
                            Name = "Akhaltsikhe"
                        },
                        new
                        {
                            Id = 23,
                            CityId = 12,
                            LanguageCode = "GE",
                            Name = "ხაშური"
                        },
                        new
                        {
                            Id = 24,
                            CityId = 12,
                            LanguageCode = "EN",
                            Name = "Khashuri"
                        });
                });

            modelBuilder.Entity("HumanResourceDictionary.Infrastructure.Entities.LocalizedGenderNames", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.ToTable("LocalizedGenderNames", "dictionary");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GenderId = 1,
                            LanguageCode = "GE",
                            Name = "ქალი"
                        },
                        new
                        {
                            Id = 2,
                            GenderId = 1,
                            LanguageCode = "EN",
                            Name = "Female"
                        },
                        new
                        {
                            Id = 3,
                            GenderId = 2,
                            LanguageCode = "GE",
                            Name = "კაცი"
                        },
                        new
                        {
                            Id = 4,
                            GenderId = 2,
                            LanguageCode = "EN",
                            Name = "Male"
                        });
                });

            modelBuilder.Entity("HumanResourceDictionary.Infrastructure.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("PersonalNumber")
                        .IsRequired()
                        .HasColumnType("VARCHAR(11)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("GenderId");

                    b.ToTable("Users", "ums");
                });

            modelBuilder.Entity("HumanResourceDictionary.Infrastructure.Entities.LocalizedCityName", b =>
                {
                    b.HasOne("HumanResourceDictionary.Infrastructure.Entities.City", "City")
                        .WithMany("LocalizedNames")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("HumanResourceDictionary.Infrastructure.Entities.LocalizedGenderNames", b =>
                {
                    b.HasOne("HumanResourceDictionary.Infrastructure.Entities.Gender", "Gender")
                        .WithMany("LocalizedGenderNames")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("HumanResourceDictionary.Infrastructure.Entities.User", b =>
                {
                    b.HasOne("HumanResourceDictionary.Infrastructure.Entities.City", "City")
                        .WithMany("Users")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HumanResourceDictionary.Infrastructure.Entities.Gender", "Gender")
                        .WithMany("Users")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("HumanResourceDictionary.Infrastructure.Entities.City", b =>
                {
                    b.Navigation("LocalizedNames");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("HumanResourceDictionary.Infrastructure.Entities.Gender", b =>
                {
                    b.Navigation("LocalizedGenderNames");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
